{"version":3,"sources":["scripts/index.js"],"names":["randomInt","min","max","Math","floor","random","Symbol","streams","options","x","y","speed","changeRate","colour","yThreshold","height","textSize","frameCount","character","char","fill","text","Stream","length","symbols","i","baseLightness","lightnessMultiplier","symbol","push","forEach","draw","Streams","window","innerWidth","stream","innerHeight","setup","createCanvas","textFont","colorMode","HSL","background","windowResized","resizeCanvas"],"mappings":";AA2FA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3FA,SAASA,EAAUC,EAAKC,GACfC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,EAGjDK,IAyEFC,EAzEED,EAuFN,WAtFcE,SAAAA,EAAAA,GAAS,EAAA,KAAA,GACdC,KAAAA,EAAID,EAAQC,EACZC,KAAAA,EAAIF,EAAQE,EACZC,KAAAA,MAAQH,EAAQG,MAChBC,KAAAA,WAAaJ,EAAQI,WACrBC,KAAAA,OAASL,EAAQK,OACjBC,KAAAA,WAAaC,OAASC,WAgF/B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OA7ES,MAAA,WACDC,WAAa,KAAKL,YAAe,GAAM,KAAKM,YACzCA,KAAAA,UAAYC,KAAKnB,EAAU,MAAO,SAEpCU,KAAAA,EAAK,KAAKA,EAAI,KAAKI,WAAc,EAAI,KAAKJ,EAAI,KAAKC,MACxDS,KAAK,KAAKP,QACVQ,KAAK,KAAKH,UAAW,KAAKT,EAAG,KAAKC,OAuEtC,EAAA,GAnEMY,EAmEN,WAlEcd,SAAAA,EAAAA,GAAS,EAAA,KAAA,GAEjBC,IAAAA,EAIED,EAJFC,EACAC,EAGEF,EAHFE,EACAC,EAEEH,EAFFG,MACAY,EACEf,EADFe,OAGGC,KAAAA,QAAU,GAEV,IAAA,IAAIC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAC5BC,IAAAA,EAAiB,EAAKD,EAAIF,EAC1BI,EAAuBF,EAAI,EAAM,IAAW,EAAJA,EAAU,GAElDG,EAAS,IAAItB,EAAO,CACxBG,EAAAA,EACAC,EAAGA,EAAKM,WAAaS,EACrBd,MAAAA,EACAC,WAAYZ,EAAU,IAAK,KAC3Ba,OAAQ,CAAC,IAAK,IAAKa,EAAgBC,KAGhCH,KAAAA,QAAQK,KAAKD,IA4CxB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAxCS,MAAA,WACAJ,KAAAA,QAAQM,QAAQ,SAACF,GAAWA,OAAAA,EAAOG,aAuC5C,EAAA,GAnCMC,EAmCN,WAlCgB,SAAA,IAAA,EAAA,KAAA,GACPzB,KAAAA,QAAU,GAEV,IAAA,IAAIkB,EAAI,EAAGA,EAAIQ,OAAOC,WAAalB,WAAYS,GAAK,EAAG,CACpDU,IAAAA,EAAS,IAAIb,EAAO,CACxBb,EAAGgB,EAAIT,WACPN,EAAGV,GAAW,IAAM,GACpBW,MAAOX,EAAU,EAAG,GACpBuB,OAAQvB,EAAU,EAAGiC,OAAOG,YAAcpB,cAGvCT,KAAAA,QAAQsB,KAAKM,IAuBxB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAnBS,MAAA,WACA5B,KAAAA,QAAQuB,QAAQ,SAACK,GAAWA,OAAAA,EAAOJ,aAkB5C,EAAA,GAZAE,OAAOI,MAAQ,WACbC,aAAaL,OAAOC,WAAYD,OAAOG,aACvCG,SAAS,YAAa,IACtBC,UAAUC,KACVlC,EAAU,IAAIyB,GAGhBC,OAAOF,KAAO,WACZW,WAAW,EAAG,EAAG,EAAG,IACpBnC,EAAQwB,QAGVE,OAAOU,cAAgB,WACrBC,aAAaX,OAAOC,WAAYD,OAAOG,aACvC7B,EAAU,IAAIyB","file":"scripts.8c200c66.js","sourceRoot":"../src","sourcesContent":["function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nclass Symbol {\n  constructor(options) {\n    this.x = options.x;\n    this.y = options.y;\n    this.speed = options.speed;\n    this.changeRate = options.changeRate;\n    this.colour = options.colour;\n    this.yThreshold = height + textSize();\n  }\n\n  draw() {\n    if (frameCount % this.changeRate === 0 || !this.character) {\n      this.character = char(randomInt(65381, 65440));\n    }\n    this.y = (this.y > this.yThreshold) ? 0 : this.y + this.speed;\n    fill(this.colour);\n    text(this.character, this.x, this.y);\n  }\n}\n\nclass Stream {\n  constructor(options) {\n    const {\n      x,\n      y,\n      speed,\n      length,\n    } = options;\n\n    this.symbols = [];\n\n    for (let i = 0; i < length; i += 1) {\n      const baseLightness = (1 - (i / length));\n      const lightnessMultiplier = (i < 3) ? (100 - (i * 5)) : 50;\n\n      const symbol = new Symbol({\n        x,\n        y: y - (textSize() * i),\n        speed,\n        changeRate: randomInt(100, 400),\n        colour: [120, 100, baseLightness * lightnessMultiplier],\n      });\n\n      this.symbols.push(symbol);\n    }\n  }\n\n  draw() {\n    this.symbols.forEach((symbol) => symbol.draw());\n  }\n}\n\nclass Streams {\n  constructor() {\n    this.streams = [];\n\n    for (let i = 0; i < window.innerWidth / textSize(); i += 1) {\n      const stream = new Stream({\n        x: i * textSize(),\n        y: randomInt(-1000, 0),\n        speed: randomInt(3, 7),\n        length: randomInt(1, window.innerHeight / textSize()),\n      });\n\n      this.streams.push(stream);\n    }\n  }\n\n  draw() {\n    this.streams.forEach((stream) => stream.draw());\n  }\n}\n\nlet streams;\n\nwindow.setup = () => {\n  createCanvas(window.innerWidth, window.innerHeight);\n  textFont('monospace', 16);\n  colorMode(HSL);\n  streams = new Streams();\n};\n\nwindow.draw = () => {\n  background(0, 0, 0, 0.6);\n  streams.draw();\n};\n\nwindow.windowResized = () => {\n  resizeCanvas(window.innerWidth, window.innerHeight);\n  streams = new Streams();\n};\n"]}